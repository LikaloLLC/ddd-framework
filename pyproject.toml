[project]
name = "docsie-ddd-framework"
version = "0.0.1"
description = "The package includes helper methods and types for working in DDD"
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE" }
authors = [
    { name = "Philippe Trounev", email = "philippe.trounev@likalo.com" },
    { name = "Nikita Belyaev", email = "nick@docsie.io" },
]
maintainers = [
    { name = "Philippe Trounev", email = "philippe.trounev@likalo.com" },
    { name = "Nikita Belyaev", email = "nick@docsie.io" },
]
classifiers = ["Programming Language :: Python"]
dependencies = ["cattrs~=23.1.0", "attrs~=23.1.0", "pymongo~=4.3.3"]

[project.optional-dependencies]
dev = ["pre-commit", "mypy", "ruff"]

[project.urls]
Repository = "https://github.com/LikaloLLC/ddd-framework.git"

[tool.setuptools.packages]
find = {}

[tool.mypy]
strict = true
explicit_package_bases = true
packages = ["ddd_framework"]
ignore_missing_imports = true
exclude = ['ddd_framework/utils/types.py']

[tool.ruff]
src = ["ddd_frameowrk"]

select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "ANN", # flake8-annotations
    "FA",  # flake8-future-annotations
    "T20", # flake8-print
    "Q",   # flake8-quotes
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PL",  # Pylint
]
ignore = [
    "E501",    # line too long, handled by black
    "B008",    # do not perform function calls in argument defaults
    "C901",    # too complex
    "ANN101",  # Missing type annotation for `self` in method
    "ANN002",  # Missing type annotation for `*args`
    "ANN003",  #  Missing type annotation for `**kwargs`
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed in ... TODO: It's better to bring it back
    "ANN102", # Missing type annotation for `cls` in classmethod
    "PLR0913", # Too many arguments to function call (7 > 5)
    "PLW1508", #Invalid type for environment variable default; expected `str` or `None`
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 128

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

target-version = "py38"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "single"


[tool.black]
line-length = 128
skip-string-normalization = true
target-version = ['py38']
